@model InsuranceClaim.Models.CustomerModel
@{
    ViewBag.Title = "UserManagement";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}

<div class="body-content-section">
    <br />
    <br /><br />
    <div class="form-section-top">
        <div class="container">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 form-section-col">
                    <div class="form-group-section">
                        <div class="form-title">
                            <h4>User Management </h4>
                        </div>
                        <div class="form-group-input">
                            @*@using (Ajax.BeginForm("SaveCustomerData", "CustomerRegistration", new AjaxOptions { UpdateTargetId = "CustomerResult", OnSuccess = "GoToProductDetail" }))*@
                            @using (Html.BeginForm("AddUserManagement", "Account", FormMethod.Post, new { role = "form" }))
                            {
                                <input type="hidden" id="clinetId" name="clinetId" />
                                @Html.HiddenFor(x => x.Id)
                                <div class="row">
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.FirstName, new { @class = "gender-label" })
                                            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @name = "FirstName", @autocomplete = "off", @id = "FirstName", @placeholder = "First Name" })
                                            @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.LastName, new { @class = "gender-label" })
                                            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @name = "LastName", @autocomplete = "off", @id = "LastName", @placeholder = "Last Name" })
                                            @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.EmailAddress, new { @class = "gender-label" })


                                            @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control", @name = "EmailAddress", @autocomplete = "off", @id = "EmailAddress", @placeholder = "Email Address" })


                                            @Html.ValidationMessageFor(x => x.EmailAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 form-group-text">

                                        <div class="form-group">
                                            @Html.LabelFor(x => x.PhoneNumber, new { @class = "gender-label" })
                                            @Html.DropDownListFor(x => x.CountryCode, new SelectList(ViewBag.Countries, "code", "code"), new { @class = "form-control countrycode" })
                                            @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control phonenumber", @name = "PhoneNumber", @autocomplete = "off", @id = "PhoneNumber", @placeholder = "Phone Number", onkeypress = "return isNumber(event)",@maxlength="10"})
                                            @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(x => x.CountryCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.Gender, new { @class = "gender-label" })
                                            <div class="form-group-label">
                                                <label>@Html.RadioButtonFor(model => model.Gender, "Male", true)<span class="outside"><span class="inside"></span></span><strong>Male</strong></label>
                                                <label>@Html.RadioButtonFor(model => model.Gender, "Female", true)<span class="outside"><span class="inside"></span></span><strong>Female</strong></label>
                                            </div>
                                            @Html.ValidationMessageFor(x => x.Gender, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.DateOfBirth, new { @class = "gender-label" })
                                            <div class="form-group-label">

                                                <div class='input-group' id='datetimepicker1'>
                                                    @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "form-control", @autocomplete = "off", @placeholder = "DOB" })

                                                    <span class="input-group-addon">
                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(x => x.DateOfBirth, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.AddressLine1, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.AddressLine1, new { @class = "form-control", @name = "AddressLine1", @autocomplete = "off", @id = "AddressLine1", @placeholder = "Address Line 1" })
                                                @Html.ValidationMessageFor(x => x.AddressLine1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.AddressLine2, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.AddressLine2, new { @class = "form-control", @name = "AddressLine2", @autocomplete = "off", @id = "AddressLine2", @placeholder = "Address Line 2" })
                                                @Html.ValidationMessageFor(x => x.AddressLine2, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="row">
                                            <div class="col-sm-6 col-md-6 form-group-text">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(x => x.City, new { @class = "form-control", @name = "State", @autocomplete = "off", @placeholder = "Enter City Name" })
                                                    @Html.ValidationMessageFor(x => x.City, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-6 form-group-text">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(x => x.State, new { @class = "form-control", @name = "State", @autocomplete = "off", @placeholder = "Enter State Name" })
                                                    @Html.ValidationMessageFor(x => x.State, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>*@
                                

                                    <div class="row">

                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.City, new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.City, new SelectList(ViewBag.Cities, "CityName", "CityName"), "----Select City----", new { @class = "form-control " })
                                                @Html.ValidationMessageFor(x => x.City, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.NationalIdentificationNumber, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.NationalIdentificationNumber, new { @class = "form-control", @name = "State", @autocomplete = "off", @id = "State", @placeholder = "National Identification Number" })
                                                @Html.ValidationMessageFor(x => x.NationalIdentificationNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.Zipcode, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.Zipcode, new { @class = "form-control", @name = "Zipcode", @autocomplete = "off", @id = "Zipcode", @placeholder = "Zip Code" })
                                                @Html.ValidationMessageFor(x => x.Zipcode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Role Name", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.role, new SelectList(ViewBag.Adduser, "Name", "Name"), new { @class = "form-control" })
                                                @Html.ValidationMessageFor(x => x.role, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">

                                                @Html.LabelFor(x => x.Branch, new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.Branch, new SelectList(ViewBag.Branches, "Id", "BranchName"), "----Select Branch----", new { @class = "form-control " })
                                                @Html.ValidationMessageFor(x => x.Branch, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.WorkTypeId, new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.WorkTypeId, new SelectList(ViewBag.WorkTypes, "Id", "Name"), "----Select Work type----", new { @class = "form-control " })
                                                @Html.ValidationMessageFor(x => x.WorkTypeId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>




                                    </div>


                                    @*<div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.TextBoxFor(x => x.Country, new { @class = "form-control", @name = "Country", @autocomplete = "off", @id = "Country", @placeholder = "Country" })
                                                @Html.ValidationMessageFor(x => x.Country, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.TextBoxFor(x => x.Zipcode, new { @class = "form-control", @name = "Zipcode", @autocomplete = "off", @id = "Zipcode", @placeholder = "Zip Code" })
                                                @Html.ValidationMessageFor(x => x.Zipcode, "", new { @class = "text-danger" })
                                            </div>*@

                                    <div class="next-btn">
                                        <div class="row">
                                            <div class="col-sm-6 col-md-6">
                                                <div class="text-left">
                                                    @if (Model.role == "Customer" || Model.role == "Web Customer")
                                                    {
                                                        <button type="button" class="btn" onclick="window.location.href='@Url.Action("CustomerManagementList","Account")'">Cancel</button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn" onclick="window.location.href='@Url.Action("UserManagementList","Account")'">Cancel</button>

                                                    }
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-6">
                                                <div class="text-right">
                                                    @if (Model.Id > 0)
                                                    {
                                                        <button type="submit" id="buttonNext" class="btn">Update</button>
                                                    }
                                                    else
                                                    {
                                                        <button type="submit" id="buttonNext" class="btn">Add</button>
                                                    }

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    }
                                </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script type="text/javascript">


    
    function isNumber(evt) {
        debugger;
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }


    $(document).ready(function () { // will trigger when the document is ready

        $('#datetimepicker1').datetimepicker({
            format: 'MM/D/YYYY',
            maxDate: new Date()
        });
        debugger
        var errorMessage = $('#ErrorMessage').val();
        if (errorMessage != null && errorMessage != '') {
            toastr.error(errorMessage)
        }
    });

    $(document).ready(function () { // will trigger when the document is ready
        debugger;



        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!

        var yyyy = today.getFullYear();
        maxDate: today
        if (dd < 10) {
            dd = '0' + dd;
        }
        if (mm < 10) {
            mm = '0' + mm;
        }

        var today = mm + '/' + dd + '/' + yyyy;

        $("#DateOfBirth").val(today);

    });
</script>


