@using Insurance.Service;
@model InsuranceClaim.Models.ListPolicy
@{
    ViewBag.Title = "Policy List";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}

<div class="productsave-section">
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 products-top">
                <div class="head-title">
                    <h2>Renew Policy List</h2>
                </div>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 add-btn products-top">
                <div class="text-right">
                    <input class="btn btn-primary" type="button" value="Generate Excel" id="generateExcel" />
                </div>
            </div>
        </div>


        <br />
        @using (Html.BeginForm("SearchRenewPolicyList", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="container-main">
                <div class="form-group-section-date">
                    <div class="form-group-input">
                        <div class="row">
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    @*@Html.LabelFor(x => x.FromDate, new { @class = "gender-label" })*@
                                    <div class='input-group' id='datetimenew'>
                                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", @placeholder = "Start Date" })
                                        @Html.ValidationMessageFor(m => m.FromDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    <div class='input-group' id='datetimenew12'>
                                        @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", @autocomplete = "off", @placeholder = "End Date" })
                                        @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-6 col-md-6 form-group-btn">
                                <div class="form-group">
                                    <ul class="list-inline">
                                        <li><button type="submit" class="btn btn-success">Search</button></li>
                                        <li><button type="button" onclick="removeSearchBox();" class="btn btn-danger">Clear Search</button></li>
                                    </ul>

                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        }
        <br />
        <br />
        <div class="policy-table-grid-main">

            @if (Model != null)
            {
                if (Model.listpolicy.Count == 0)
                {
                    <label>No Policies Found</label>
                }
            }


            <table class="table table-striped" id="report2excel">
                <thead style='display:none;'>


                    <tr>
                        <td>
                            <p><b><u>Report Generated Date:</u></b> <span id="datetime"></span></p>

                            <script>
                                var dt = new Date();
                                document.getElementById("datetime").innerHTML = dt.toLocaleString();
                            </script>
                        </td>
                        <td></td>
                        <td>
                            <h3><u>@ViewBag.Title</u></h3>
                            <strong></strong>
                            <strong></strong>

                        </td>
                        <td></td>
                        <td colspan="2" rowspan="2"><center><strong>Start Date :</strong></center></td>

                        <td><label for="FromDate">@ViewBag.fromdate</label><br></td>
                        <td></td>
                        <td colspan="2" rowspan="2"><center><strong>End Date :</strong></center></td>
                        <td><label for="EndDate">@ViewBag.enddate</label></td>
                    </tr>

                </thead>
                <thead>
                    <tr class="policyheading-tr">
                        <th>Call Centre Agent/User</th>
                        <th>Customer Name</th>
                        <th>Contact Number</th>
                        <th>Policy Number</th>
                        <th>Start date</th>
                        <th>End date</th>
                        <th>Lic Exp date</th>
                        <th>VRN</th>
                        <th>Make </th>
                        <th>Model</th>
                        <th>Cover type</th>
                        <td>Currency</td>
                        <th>Sum Insured</th>
                        <th>Total Premium</th>
                        <th>Status</th>

                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.listpolicy.ToList())
                    {


                        <tr class="policynumber-tr">
                            <td>@item.AgentName</td>
                            <td>@item.CustomerName</td>
                            <td>@item.CustomerContactNumber</td>
                            <td>@item.PolicyNumber</td>
                            <td>@item.startdate</td>
                            <td>@item.enddate</td>
                            <td>@item.LicExpDate</td>
                            <td>@item.RegisterationNumber</td>
                            <td>@item.Make</td>
                            <td>@item.Model</td>
                            <td>@item.CoverTypeName</td>
                            <td>@item.Currency</td>

                            <td>
                                @if (item.TotalSumInsured != 0)
                                {
                                    @item.TotalSumInsured;
                                }
                            </td>
                            <td> @item.TotalPremium</td>
                            <td>
                                @item.PolicyStatus
                                </td>

                            </tr>


                    }
                </tbody>



            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="mymodals" role="dialog">
    @*@using (Html.BeginForm("UploadFile", "Upload", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {*@
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <label>Document List</label>
            </div>
            <div class="modal-body">
                <div class="tblfilelisting-grid">
                    <table id="tblfileListing" class="table table-striped">
                        <thead>
                            <tr>
                                <th style="width:100px;">Title</th>
                                <th>Description</th>
                                <th style="width:100px;">Action(s)</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <ul id="fileListUL"></ul>
                </div>
                <div>
                    <table style="width:100%">
                        <tr>
                            <td style="padding: 6px;">Title</td>
                            <td style="padding: 6px;"><input class="form-control" id="txt" type="text" name="Textbox" /></td>

                        </tr>
                        <tr>
                            <td class="label-top" style="padding: 6px;">Description</td>
                            <td class="resize-none" style="padding: 6px;"><textarea class="form-control" id="tarea" name="message" rows="2" cols="20"></textarea></td>
                        </tr>
                        <tr>
                            <td style="padding: 6px;">File</td>
                            <td style="padding: 6px;"><input type="file" id="file_Uploader" accept=".doc,.docx,.xml,.PDF,.XLSX," /></td>
                        </tr>
                    </table>

                </div>
                <div>
                </div>

            </div>
            <div class="modal-footer">
                <input type="button" id="documnet" value="Upload" class="btn btn-primary" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
    @Html.Hidden("PolicyNumber")
    @Html.Hidden("CustomerId")
    @Html.Hidden("vehicleId")
</div>
<script>


    $(document).ready(function () {

        $(".tablesorter").tablesorter();
        $("#datetimenew").datetimepicker({
            format: 'MM/D/YYYY'
        });
        $("#datetimenew12").datetimepicker({
            format: 'MM/D/YYYY'

        });

    });


    $("#generateExcel").click(function () {
        debugger;
        $("#report2excel").table2excel({
            // exclude CSS class
            exclude: ".noExl",
            name: "Worksheet Name",
            filename: "RenewPolicy" //do not include extension

        });
    });



    function removeSearchBox() {
        window.location.href = "/Account/RenewPolicyList";
    }

    function uploadFile() {
        debugger;

        if ($("#txt").val() == "") {
            toastr.error("No Title selected");
            return false;
        }
        if (document.getElementById("file_Uploader").files.length == 0) {
            //alert("No files selected");
            toastr.error("No files selected");


            return false;
        }
        else {
            if (window.FormData !== undefined) {
                debugger;
                var fileUpload = $("#file_Uploader").get(0);
                var files = fileUpload.files;
                var Filedata = new FormData();

                for (var i = 0; i < files.length; i++) {
                    Filedata.append(files[i].name, files[i]);
                }

                Filedata.append("PolicyNumber", $("#PolicyNumber").val());
                Filedata.append("CustomerId", $("#CustomerId").val());
                Filedata.append("vehicleId", $("#vehicleId").val());
                Filedata.append("Title", $("#txt").val());
                Filedata.append("Description", $("#tarea").val());



                $.ajax({
                    url: '/Account/UploadFile',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: Filedata,
                    success: function (result) {
                        //alert(result);

                        $("#txt").val("");
                        $("#tarea").val("");
                        $("#file_Uploader").val('')

                        toastr.success(result);

                        getFiles();



                    },
                    error: function (err) {
                        toastr.error(err.statusText);
                    }
                });
            }
            else {
                //alert("FormData is not supported.");
            }
        }
    }

    $(document).ready(function () {

        $("#tblfileListing").hide();
        $("#documnet").click(function () {
            debugger;

            uploadFile();
        })
    })

    function showPopupp(PolicyNumber, CustomerId, vehicleId) {
        debugger;
        $("#PolicyNumber").val(PolicyNumber);
        $("#CustomerId").val(CustomerId);
        $("#vehicleId").val(vehicleId);

        getFiles();

        $("#txt").val("");
        $("#tarea").val("");
        $("#file_Uploader").val('')

        $("#mymodals").modal("show");
    };

    function disableVehicle(VehicleId) {

        $.ajax({

            url: '/Account/DisablePolicy',
            type: "GET",
            data: { VehicleId: VehicleId },
            success: function (result) {
                if (result) {
                    toastr.success("Vehicle De-Activated Successfully !!");
                    location.href = location.href;
                }
                else {
                    toastr.error("Unable To De-Activate, Please Try Again !!");
                }
            }
        });

    }

    function ActivateVehicle(VehicleId) {

        $.ajax({

            url: '/Account/ActivateVehicle',
            type: "GET",
            data: { VehicleId: VehicleId },
            success: function (result) {
                if (result) {
                    toastr.success("Vehicle Activated Successfully !!");
                    location.href = location.href;
                }
                else {
                    toastr.error("Unable To Activate, Please Try Again !!");
                }
            }
        });

    }

    function getFiles() {

        var Filedata = new FormData();
        Filedata.append("PolicyNumber", $("#PolicyNumber").val());
        Filedata.append("CustomerId", $("#CustomerId").val());
        Filedata.append("vehicleId", $("#vehicleId").val());

        $("#tblfileListing tbody").empty();
        $.ajax({

            url: '/Account/GetUplodedFiles',
            type: "POST",
            contentType: false,
            processData: false,
            data: Filedata,
            success: function (result) {
                debugger;
                $("#tblfileListing").show();
                for (var i = 0; i < result.length; i++) {
                    $("#tblfileListing tbody").append('<tr><td>' + result[i].Title + '</td><td>' + result[i].Decription + '</td><td><a href="' + result[i].FilePath + '" class = "glyphicon glyphicon-download-alt"></a> </td></tr>');
                }
                if (result.length == 0) {
                    $("#tblfileListing tbody").append('<tr><td colspan=3> Records not found</td></tr>');
                    toastr.error("Records not found");
                }
            },
            error: function (err) {
                //alert(err.statusText);
            }
        });
    }

    function removeSearchBoxText() {
        window.location.href = "/Account/PolicyList";

    }

    function DeleteConfirm(docid) {
        debugger;
        if (confirm("Are You Sure Delete This File")) {

            var Filedata = new FormData();
            Filedata.append("docid", docid);

            $.ajax({
                url: '/Account/DeleteDocument',
                type: "POST",
                contentType: false,
                processData: false,
                data: Filedata,
                success: function (result) {
                    if (result) {
                        toastr.success("File Deleted Successfully");
                    }
                    else {
                        toastr.error("File was not Deleted. Please Try Again !!");
                    }
                    getFiles();

                },
                error: function (err) {
                    toastr.error(err.statusText);
                }
            });

        }
        return false;
    }


    //29JanRensedEmail

    function RsendPolicys(vehicleId) {
        debugger;
        $(".loading-area").show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("RenewResendPolicy", "Account")",
            data: "{ 'vehicleId': '" + vehicleId + "'}",
            dataType: "json",
            success: function (Result) {
                debugger;
                $(".loading-area").hide();
                alert("Mail has been sent sucessfully.");
            },
            error: function (Result) {
                $(".loading-area").hide();
                alert("Error");
            }
        });
    }

</script>
