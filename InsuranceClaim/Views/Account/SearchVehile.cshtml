
@model InsuranceClaim.Models.RefundPolicyModel
@{
    ViewBag.Title = "RefundPolicy";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}



<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet" />
<div class="body-content-section">
    <div class="form-section-top">
        <div class="container">



            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 form-section-col">
                    <div class="form-group-section">

                        <h4>Refund Policy</h4>
                        <br />
                        @using (Html.BeginForm("SearchVehile", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
                        {
                            <div class="row">
                                <div class="col-sm-6 col-md-6 form-group-text">
                                    <div class="form-group">
                                        @*@Html.LabelFor(x => x.RegistrationNumber, "Search by", new { @class = "gender-label" })*@
                                        @Html.TextBoxFor(x => x.RegistrationNumber, new { @class = "form-control", @autocomplete = "off", @placeholder = "Registration No" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-6 ">
                                    <div class="form-group">
                                        <button type="submit" id="btnSearch" onclick="return" name="Submit" class="btn btn-success text-left ">Search</button>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="form-group-input">

                            @using (Html.BeginForm("RefundPolicy", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
                            {
                                @Html.HiddenFor(x => x.PolicyId)
                                @Html.HiddenFor(x => x.VehicleId)
                                @Html.HiddenFor(x => x.CustomerId)
                                @Html.HiddenFor(x => x.SummaryDetailId)


                                if (TempData["SuccessMsg"] != null)
                                {
                                    <div class="alert alert-success">
                                        @TempData["SuccessMsg"]
                                    </div>
                                }

                                if (TempData["ErrorMsg"] != null)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Danger!</strong> Indicates a dangerous or potentially negative action.
                                    </div>
                                }

                                <div class="row">
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.CustomerName, "Customer Name", new { @class = "gender-label" })
                                            @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    </div>

                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @Html.LabelFor(x => x.PolicyNumber, "Policy No.", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.PolicyNumber, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.CoverStartDate, "Cover Start Date", new { @class = "gender-label" })
                                            @Html.TextBoxFor(x => x.CoverStartDate, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @Html.LabelFor(x => x.CoverEndDate, "Cover End Date", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.CoverEndDate, new { @class = "form-control", @readonly = "readonly" })

                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <div class="row">
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @Html.LabelFor(x => x.Premium, "Premium", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.Premium, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @Html.LabelFor(x => x.TotalPremium, "Total Premium", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.TotalPremium, new { @class = "form-control", onblur = "CalcuatePremium();", @type = "number" })
                                                @Html.ValidationMessageFor(model => model.TotalPremium, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                    </div>
                                </div>




                                <div class="row">
                                    <div class="col-sm-6 col-md-6 form-group-text">
                                        <div class="form-group">
                                            <div class='input-group'>
                                                @Html.LabelFor(x => x.RefundAmount, "Refund Amount", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.RefundAmount, new { @class = "form-control", @placeholder = "RefundAmount", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.RefundAmount, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-sm-6 col-md-6">
                                        <div class="text-left">
                                            <button type="submit" id="btnSubmit" onclick="return" name="Submit" class="btn btn-success">Submit</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>

<script>
    $(document).ready(function () {

        //get current date
    });

    function CalcuatePremium() {

        if ($("#Premium").val() != "" && $("#Deduction").val() != "") {
            var premium = $("#Premium").val();
            var Deduction = $("#Deduction").val();


            var premium = parseFloat(premium);
            var Deduction = parseFloat(Deduction);

            var calculatePemium = (premium - (premium * Deduction / 100)).toFixed(2);
            $("#RefundAmount").val(calculatePemium);
        }
    }


</script>
