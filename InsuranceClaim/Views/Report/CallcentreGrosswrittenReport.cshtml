@model InsuranceClaim.Models.GrossWrittenPremiumReportSearchModels
@{
    ViewBag.Title = "CallcentreGrosswrittenReport";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}


<div class="productsave-section GrossWrittenPremiumReport">

    <div class="container-fluid" id="content">

        <div class="row">
            <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 products-top">
                <div class="head-title">
                    <h2>Callcentre GrosswrittenReport</h2>
                </div>
            </div>
            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4" style="margin-top:28px;">
                <div class="text-right">
                    <input class="btn btn-primary" type="button" value="Generate Excel" id="generateExcel" />
                </div>
            </div>
        </div>


        @using (Html.BeginForm("SearchCallcentreGrosswrittenReport", "Report", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {

            <div class="container-main">
                <div class="form-group-section-date">
                    <div class="form-group-input">
                        <div class="row">
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    @*@Html.LabelFor(x => x.FromDate, new { @class = "gender-label" })*@
                                    <div class='input-group' id='datetimenew'>
                                        @Html.TextBoxFor(m => m.FormDate, new { @class = "form-control", @placeholder = "Start Date" })
                                        @Html.ValidationMessageFor(m => m.FormDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    @*@Html.LabelFor(x => x.EndDate, new { @class = "gender-label" })*@
                                    <div class='input-group' id='datetimenew12'>
                                        @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", @autocomplete = "off", @placeholder = "End Date" })
                                        @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>


                           



                            <div class="col-sm-6 col-md-6 form-group-btn">
                                <div class="form-group">
                                    <ul class="list-inline">
                                        <li><button type="submit" class="btn btn-success">Search</button></li>
                                        <li><button type="button" onclick="removeSearchBox();" class="btn btn-danger">Clear Search</button></li>
                                    </ul>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }


        <div class="product-table-grid">
            <div class="table-responsive">
                <table class="table table-striped tablesorter" id="report2excel">

                    <thead style='display:none;'>
                        <tr>
                            <td>
                                <p><b><u>Report Generated Date:</u></b> <span id="datetime"></span></p>

                                <script>
                                    var dt = new Date();
                                    document.getElementById("datetime").innerHTML = dt.toLocaleString();
                                </script>

                            </td>
                            <td></td>
                            <td>
                                <h3><u>@ViewBag.Title</u></h3>
                                <strong></strong>
                                <strong></strong>

                            </td>
                            <td></td>
                            <td colspan="2" rowspan="2"><center><strong>Start Date :</strong></center></td>

                            <td><label for="FromDate">@ViewBag.fromdate</label><br></td>
                            <td></td>
                            <td colspan="2" rowspan="2"><center><strong>End Date :</strong></center></td>
                            <td><label for="EndDate">@ViewBag.enddate</label></td>
                        </tr>
                    </thead>
                    <thead>


                    <thead>
                        <tr>
                            <td rowspan="7"></td>
                        </tr>
                    </thead>

                    <thead>
                        <tr>
                            <th>User/Call center agent</th>
                            <th>Target Transactions</th>
                            <th>Actual Transactions</th>
                            <th>Performance %   </th>
                            <th>Variance</th>
                            <th>Tagret GWP</th>
                            <th>Actual GWP</th>
                            <th>Performance %</th>
                            <th>Variance</th>
                            <th>Work From</th>
                        </tr>
                    </thead>
                    <tbody>


                        
                        @{
                            int targetTransaction = 0;
                            int actualTransaction = 0;

                            decimal targetGwp = 0;
                            decimal actualGwp = 0;
                            int averageTransaction = 0;

                        }


                        @foreach (var item in Model.ListGrossWrittenPremiumReportdata.ToList())
                        {
                            targetTransaction += Convert.ToInt32(item.AgentTargetPolicy);
                            actualTransaction += item.AgentActualPolicy;

                            targetGwp += Convert.ToInt32(item.AgentTargetGwp);
                            actualGwp += Convert.ToInt32(item.AgentActualGwp);

                            <tr>
                                <td> @item.PolicyCreatedBy  </td>
                                
                                <td> @item.AgentTargetPolicy</td>
                                <td> @item.AgentActualPolicy </td>

                                <th> @item.TransactionPerformance %   </th>
                                <th> @item.TransactionVariance </th>


                                <td> @item.AgentTargetGwp </td>
                                <td> @item.AgentActualGwp </td>


                                <th> @item.GwpPerformance %   </th>
                                <th> @item.GwpVariance </th>
                                <th> @item.WorkDesc</th>

                            </tr>
                        }
                    </tbody>
                   <tfoot>

                       <tr>
                           <td><b>Total</b> </td>
                           <td> <b> @targetTransaction</b> </td>
                           <td> <b> @actualTransaction </b>   </td>
                           <td></td>
                           <td></td>
                           <td>
                             <b>@targetGwp </b>  
                           </td>
                           <td>
                              <b> @actualGwp</b> 
                           </td>
                           <td></td>
                           <td></td>
                           <td></td>

                       </tr>

                       <tr>
                        <td><b>  Daily average </b></td>
                           <td></td>
                           <td></td>
                           
                           <td colspan="7">                          
                               @{
                                   if(actualTransaction!=0 && Model.NumOfUser!=0)
                                   {
                                       decimal a = Convert.ToDecimal(actualTransaction) / Convert.ToDecimal(Model.NumOfUser);
                                       averageTransaction = Convert.ToInt32(a);
                                   }
                               }                                                                      
                               <span> <b> @averageTransaction  </b>   </span> 
                           
                           
                              </td>
                       </tr>

                   </tfoot>




                </table>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {

        $(".tablesorter").tablesorter({

            headers: {

                2: {
                    sorter: false
                },
                4: {
                    sorter: false
                },

                6: {
                    sorter: false
                },
                9: {
                    sorter: false
                },

            }
        });


        

     

        $("#datetimenew").datetimepicker({
            format: 'MM/D/YYYY'

        });

        




        $("#datetimenew12").datetimepicker({
            format: 'MM/D/YYYY'

        });


    });


    function removeSearchBox() {
        window.location.href = "/Report/CallcentreGrosswrittenReport";
    }

    $("#generateExcel").click(function () {
        debugger;
        $("#report2excel").table2excel({
            // exclude CSS class
            exclude: ".noExl",
            name: "Worksheet Name",
            filename: "CallCenterGwpReport" //do not include extension

        });
    });

    var doc = new jsPDF({ format: [600, 600] });
    var specialElementHandlers = {
        '#editor': function (element, renderer) {
            return true;
        }
    };

    $('#generatePdf').click(function () {

        doc.fromHTML($('#content').html(), 15, 15, {
            'width': 500,
            'elementHandlers': specialElementHandlers
        });
        doc.save('CallCenterGwpReport.pdf');

    });




</script>