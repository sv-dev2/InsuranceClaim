@model InsuranceClaim.Models.GrossWrittenPremiumReportSearchModels

@{
    ViewBag.Title = "Endorsments";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
}



<div class="productsave-section GrossWrittenPremiumReport">

    <div class="container-fluid" id="content">

        <div class="row">
            <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 products-top">
                <div class="head-title">
                    <h2>Endorsments</h2>
                </div>
            </div>
            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4" style="margin-top:28px;">
                <div class="text-right">
                    <input class="btn btn-primary" type="button" value="Generate Excel" id="generateExcel" />
                </div>
            </div>
        </div>

        @using (Html.BeginForm("SearchEndorsments", "Report", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="container-main">
                <div class="form-group-section-date">
                    <div class="form-group-input">
                        <div class="row">
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    @*@Html.LabelFor(x => x.FromDate, new { @class = "gender-label" })*@
                                    <div class='input-group' id='datetimenew'>
                                        @Html.TextBoxFor(m => m.FormDate, new { @class = "form-control", @placeholder = "Start Date" })
                                        @Html.ValidationMessageFor(m => m.FormDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3 col-md-3 form-group-text">
                                <div class="form-group">
                                    @*@Html.LabelFor(x => x.EndDate, new { @class = "gender-label" })*@
                                    <div class='input-group' id='datetimenew12'>
                                        @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", @autocomplete = "off", @placeholder = "End Date" })
                                        @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6 form-group-btn">
                                <div class="form-group">
                                    <ul class="list-inline">
                                        <li><button type="submit" class="btn btn-success">Search</button></li>
                                        <li><button type="button" onclick="removeSearchBox();" class="btn btn-danger">Clear Search</button></li>
                                    </ul>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }


        <div class="product-table-grid">
            <div class="table-responsive">
                <table class="table table-striped tablesorter" id="report2excel">

                    <thead style='display:none;'>
                        <tr>
                            <td>
                                <p><b><u>Report Generated Date:</u></b> <span id="datetime"></span></p>

                                <script>
                                    var dt = new Date();
                                    document.getElementById("datetime").innerHTML = dt.toLocaleString();
                                </script>

                            </td>
                            <td></td>
                            <td>
                                <h3><u>@ViewBag.Title</u></h3>
                                <strong></strong>
                                <strong></strong>

                            </td>
                            <td></td>
                            <td colspan="2" rowspan="2"><center><strong>Start Date :</strong></center></td>

                            <td><label for="FromDate">@ViewBag.fromdate</label><br></td>
                            <td></td>
                            <td colspan="2" rowspan="2"><center><strong>End Date :</strong></center></td>
                            <td><label for="EndDate">@ViewBag.enddate</label></td>
                        </tr>

                    </thead>
                    <thead>


                    <thead>
                        <tr>
                            <td rowspan="7"></td>
                        </tr>
                    </thead>


                    <thead>
                        <tr>
                            <th style="width: 170px;">User/Call center agent</th>
                            <th>Branch</th>
                            <th style="width: 170px;">Customer Name</th>
                            <th style="width: 180px;">Policy Number</th>
                            <th>Cover Note</th>
                            <th style="width:170px;">Policy Dates</th>
                            <th>Payment Detail</th>
                            <th>Term Period</th>
                            <th>Cover Type</th>
                            <th>Currency</th>
                            <th>SumInsured</th>
                            <th>Premium</th>

                            <th>Stamp Duty</th>
                            <th>ZTSC Levy</th>
                            <th>Commission Detail</th>
                            <th>Radio Licence Cost</th>
                            <th>Zinara License Fee</th>
                            <th>Status</th>
                            <th>Policy Status</th>
                            <th>
                                Business Source
                            </th>
                            <th> Payment Status</th>
                        </tr>
                    </thead>
                    <tbody>

                        @{
                            decimal sumInsuredTotal = 0;
                            decimal annualPremiumTotal = 0;
                            decimal premiumDueTotal = 0;
                            decimal netPremiumTotal = 0;
                            decimal stampdutyTotal = 0;
                            decimal ztscLevyTotal = 0;
                            decimal commissionAmountTotal = 0;
                            decimal radioLicenseCostTotal = 0;
                            decimal ZinaraLicenseFee = 0;
                            decimal TotalUs = 0;
                            decimal TotalRTGS = 0;
                            decimal TotalUSD = 0;
                            decimal TotalINR = 0;
                            int count = 0;
                            int count1 = 0;
                            int count2 = 0;
                            int count3 = 0;
                            //Newbusiness
                            decimal rtgstotal = 0;
                            decimal ustotal = 0;
                            int rtgscount = 0;
                            int uscount = 0;
                            //Renewal
                            decimal Rertgstotal = 0;
                            decimal Reustotal = 0;
                            int Rertgscount = 0;
                            int Reuscount = 0;


                        }

                        @foreach (var item in Model.ListGrossWrittenPremiumReportdata.ToList())
                        {
                            //15 may D
                            if (item.RenewPolicyNumber == null)
                            {
                                //US$ FCA
                                if (item.Currency == "USD")
                                {
                                    ustotal += item.Premium_due;
                                    uscount = uscount + 1;
                                }
                                if (item.Currency == "RTGS$")
                                {
                                    rtgstotal += item.Premium_due;
                                    rtgscount = rtgscount + 1;
                                }
                            }

                            else if (Convert.ToInt16(item.RenewPolicyNumber.Split('-')[1]) > 1)
                            {
                                //US$ FCA
                                if (item.Currency == "USD")
                                {
                                    Reustotal += item.Premium_due;
                                    Reuscount = Reuscount + 1;
                                }
                                if (item.Currency == "RTGS$")
                                {
                                    Rertgstotal += item.Premium_due;
                                    Rertgscount = Rertgscount + 1;
                                }
                            }
                            else
                            {
                                if (item.Currency == "US$ FCA")
                                {
                                    ustotal += item.Premium_due;
                                    uscount = uscount + 1;
                                }
                                if (item.Currency == "RTGS$")
                                {
                                    rtgstotal += item.Premium_due;
                                    rtgscount = rtgscount + 1;
                                }
                            }
                            ///End

                            if (item.Currency == "US$ FCA")
                            {
                                TotalUs += item.Premium_due;
                                count = count + 1;
                            }
                            if (item.Currency == "RTGS$")
                            {
                                TotalRTGS += item.Premium_due;
                                count1 = count1 + 1;
                            }
                            if (item.Currency == "USD" || item.Currency == null)
                            {
                                TotalUSD += item.Premium_due;
                                count2 = count2 + 1;
                            }
                            if (item.Currency == "INR")
                            {
                                TotalINR += item.Premium_due;
                                count3 = count3 + 1;
                            }

                            sumInsuredTotal += item.Sum_Insured;
                            annualPremiumTotal += item.Annual_Premium;
                            premiumDueTotal += item.Premium_due;
                            netPremiumTotal += Convert.ToDecimal(item.Net_Premium);
                            stampdutyTotal += item.Stamp_duty;
                            ztscLevyTotal += item.ZTSC_Levy;
                            commissionAmountTotal += item.Comission_Amount;
                            radioLicenseCostTotal += Convert.ToDecimal(item.RadioLicenseCost);
                            ZinaraLicenseFee += Convert.ToDecimal(item.Zinara_License_Fee);
                            <tr>
                                <td>
                                    @item.PolicyCreatedBy
                                </td>
                                <td>
                                    @if (item.PolicyCreatedBy != null && item.PolicyCreatedBy.Contains("Web Client"))
                                    {
                                        <span>Online</span>
                                    }
                                    else
                                    {
                                        @item.BranchName
                                    }

                                </td>
                                <td>@item.Customer_Name</td>
                                <td>

                                    @if (item.RenewPolicyNumber == null)
                                    {
                                        @item.Policy_Number
                                    }
                                    else
                                    {
                                        @item.RenewPolicyNumber
                                    }

                                </td>
                                <td>@item.CoverNoteNum</td>
                                <td>
                                    @item.Transaction_date
                                </td>
                                <td>
                                    @item.Payment_Mode
                                </td>
                                <td> @item.Payment_Term</td>

                                <td>@item.CoverType</td>
                                <td> @item.Currency </td>
                                <td>@item.Sum_Insured</td>
                                <td>
                                    @item.Premium_due
                                </td>

                                <td> @item.Stamp_duty</td>
                                <td> @item.ZTSC_Levy</td>
                                <td>
                                    @item.Comission_Amount
                                </td>
                                <td>@item.RadioLicenseCost</td>
                                <td> @item.Zinara_License_Fee </td>




                                @if (DateTime.Now > item.PolicyRenewalDate)
                                {
                                    <td>Lapsed</td>
                                }
                                else if (Convert.ToBoolean(!item.IsActive))
                                {
                                    <td>Disabled</td>
                                }
                                else if (DateTime.Now < item.PolicyRenewalDate && Convert.ToBoolean(item.IsActive))
                                {
                                    <td>In Force</td>
                                }


                                @if (item.PolicyRenewalDate != null && item.PolicyRenewalDate == DateTime.MinValue)
                                {
                                    <td>Endorsment</td>
                                }

                                else if (item.RenewPolicyNumber == null)
                                {
                                    <td>New Business</td>
                                }

                                else if (Convert.ToInt16(item.RenewPolicyNumber.Split('-')[1]) > 1)
                                {
                                    <td>Renewals</td>
                                }
                                else
                                {
                                    <td>New Business</td>
                                }


                                <td>@item.BusinessSourceName <span>-</span>   </td>

                                <td>
                                    @if (item.PaymentMethodId == (int)InsuranceClaim.Models.paymentMethod.PayLater)
                                    {
                                        <span>PayLater</span>
                                    }
                                    else
                                    {
                                        <span>Paid</span>
                                    }

                                </td>


                                @*@item.SourceDetailName*@
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td><strong>Total:</strong></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>
                                <b> @premiumDueTotal </b>
                            </td>
                            <td><strong>@stampdutyTotal</strong></td>
                            <td><strong>@ztscLevyTotal</strong></td>
                            <td>
                                <strong>@commissionAmountTotal</strong>
                            </td>
                            <td><strong>@radioLicenseCostTotal</strong></td>
                            <td><strong> @ZinaraLicenseFee </strong> </td>
                            <td></td>
                            <td></td>
                            <td colspan="2"></td>

                        </tr>
                        @*<tr>
                                <td><strong>Currency Total:</strong></td>
                                <td></td>
                                <td><strong>Us$ Total:</strong></td>
                                <td>@TotalUs</td>
                                <td>Us$ Total Count:@count</td>
                                <td><strong>RTGS$ Total:</strong></td>
                                <td>@TotalRTGS</td>
                                <td>RTGS$ Total Count:@count1</td>
                                <td><strong>USD Total:</strong></td>
                                <td>@TotalUSD</td>
                                <td>USD Total:@count2</td>
                                <td><strong>INR Total:</strong></td>
                                <td>@TotalINR</td>
                                <td>INR Total Count:@count3</td>
                                <td></td>
                                <td></td>
                            </tr>*@

                        <tr>

                            <td colspan="10"></td>
                            <td colspan="3"><strong>Currency</strong></td>
                            <td colspan="3"><strong>Amount</strong></td>
                            <td colspan="3"><strong>Count</strong></td>

                            <td colspan="2"></td>

                        </tr>

                        <tr>
                            <td colspan="10"><strong>New Business:</strong></td>


                            <td colspan="3">USD</td>
                            <td colspan="3">@ustotal</td>
                            <td colspan="3">@uscount</td>
                            <td colspan="2"></td>

                        </tr>
                        <tr>

                            <td colspan="10"></td>

                            <td colspan="3">RTGS$</td>
                            <td colspan="3">@rtgstotal</td>
                            <td colspan="3">@rtgscount</td>
                            <td colspan="2"></td>

                        </tr>

                        <tr>
                            <td colspan="19"></td>
                            <td colspan="2"></td>
                        </tr>
                        <tr>
                            <td colspan="10"><strong>Renewals</strong></td>

                            <td colspan="3">USD</td>
                            <td colspan="3">@Reustotal</td>
                            <td colspan="3">@Reuscount</td>
                            <td colspan="2"></td>

                        </tr>
                        <tr>

                            <td colspan="10"></td>

                            <td colspan="3">RTGS$</td>

                            <td colspan="3">@Rertgstotal</td>
                            <td colspan="3">@Rertgscount</td>
                            <td colspan="2"></td>

                        </tr>

                        <tr>
                            <td colspan="19"></td>
                            <td colspan="2"></td>
                        </tr>


                        <tr>
                            <td colspan="10"><strong>Grand Total</strong></td>


                            <td colspan="3"> USD</td>
                            <td colspan="3">@(ustotal + Reustotal)</td>
                            <td colspan="3"> @(uscount + Reuscount) </td>
                            <td colspan="2"></td>

                        </tr>
                        <tr>

                            <td colspan="10"></td>

                            <td colspan="3">RTGS$</td>
                            <td colspan="3">@(rtgstotal + Rertgstotal)</td>
                            <td colspan="3">@(  rtgscount + Rertgscount)</td>
                            <td colspan="2"></td>

                        </tr>
                        <tr>

                            <td colspan="10"></td>

                            <td colspan="3">TOTAL RTGS$</td>
                            <td colspan="3">@(ustotal + Reustotal + rtgstotal + Rertgstotal)</td>
                            <td colspan="3">@( uscount + Reuscount + rtgscount + Rertgscount)</td>
                            <td colspan="2"></td>

                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>
<script>

        $(document).ready(function () {

            $(".tablesorter").tablesorter({

                headers: {

                    2: {
                        sorter: false
                    },
                    4: {
                        sorter: false
                    },

                    6: {
                        sorter: false
                    },
                    9: {
                        sorter: false
                    },

                }
            });


            $("#datetimenew").datetimepicker({
                format: 'MM/D/YYYY'
            });
            $("#datetimenew12").datetimepicker({
                format: 'MM/D/YYYY'

            });
        });


        function removeSearchBox() {
            window.location.href = "/Report/Endorsments";
        }

        $("#generateExcel").click(function () {
            debugger;
            $("#report2excel").table2excel({
                // exclude CSS class
                exclude: ".noExl",
                name: "Worksheet Name",
                filename: "EndorsmentsReport" //do not include extension

            });
        });

        var doc = new jsPDF({ format: [600, 600] });
        var specialElementHandlers = {
            '#editor': function (element, renderer) {
                return true;
            }
        };

        $('#generatePdf').click(function () {

            doc.fromHTML($('#content').html(), 15, 15, {
                'width': 500,
                'elementHandlers': specialElementHandlers
            });
            doc.save('GrossWrittenPremiumReport.pdf');

        });
</script>