
using System;
using System.Linq;
using System.Text;
using System.Data;
using System.Collections.Generic;

namespace Insurance.Domain
{
    // ############################################################################
    // #
    // #        ---==>  T H I S  F I L E  W A S  G E N E R A T E D  <==---
    // #
    // # This file was generated by PRO Spark, C# Edition, Version 4.5
    // # Generated on 2/26/2017 7:39:39 PM
    // #
    // # Edits to this file may cause incorrect behavior and will be lost
    // # if the code is regenerated.
    // #
    // ############################################################################

    // Insurance Domain objects

    public partial class Currency : Entity<Currency>
    {
        public Currency() { }
        public Currency(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Name { get; set; }
        public string Code { get; set; }

        public string Description { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool IsActive { get; set; }

    }


    public partial class TokenRequest : Entity<TokenRequest>
    {
        public TokenRequest() { }
        public TokenRequest(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Token { get; set; }
        public DateTime ExpiryDate { get; set; }
        public DateTime UpdatedOn { get; set; }
    }





    public partial class AgentCommission : Entity<AgentCommission>
    {
        public AgentCommission() { }
        public AgentCommission(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int BusinessSourceId { get; set; }
        public string CommissionName { get; set; }
        public double? CommissionAmount { get; set; }
        public double? ManagementCommission { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }

    public partial class BusinessSource : Entity<BusinessSource>
    {
        public BusinessSource() { }
        public BusinessSource(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Source { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }


    public partial class QRCode : Entity<QRCode>
    {
        public QRCode() { }
        public QRCode(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string PolicyNo { get; set; }
        public string Qrcode { get; set; }
        public string ReadBy { get; set; }
        public string Deliverto { get; set; }
        public DateTime Createdon { get; set; }
        public string Comment { get; set; }
    }


    public partial class CoverType : Entity<CoverType>
    {
        public CoverType() { }
        public CoverType(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Name { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
    }


    public partial class Partner : Entity<Partner>
    {
        public Partner() { }
        public Partner(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string PartnerName { get; set; }
        public bool? Status { get; set; }
      
    }


    public partial class PartnerCommission : Entity<PartnerCommission>
    {
        public PartnerCommission() { }
        public PartnerCommission(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int PartnerId { get; set; }
        public decimal CommissionPercentage { get; set; }

        public DateTime CommissionEffectiveDate { get; set; }

        public DateTime CreatedAt { get; set; }

    }


    public partial class Domestic_Vehicle : Entity<Domestic_Vehicle>
    {
        public Domestic_Vehicle() { }
        public Domestic_Vehicle(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int PolicyId { get; set; }
        public int NoOfCarsCovered { get; set; }

        public int CustomerId { get; set; }

        public DateTime CoverStartDate { get; set; }
        public DateTime CoverEndDate { get; set; }
        public int ProductId { get; set; }

        public int RiskCoverId { get; set; }

        public int RiskItemId { get; set; }

        public string RiskAddress { get; set; }

        public int PaymentTermId { get; set; }

        public int PaymentTypeId { get; set; }

        public decimal CoverAmount { get; set; }
        public decimal Rate { get; set; }
        public string Notes { get; set; }
        public decimal BasicPremium { get; set; }
        public decimal StampDuty { get; set; }
        public decimal PremiumDue { get; set; }
        public DateTime TransactionDate { get; set; }

        public DateTime RenewDate { get; set; }

        public DateTime PolicyExpireDate { get; set; }

        public string RenewPolicyNumber { get; set; }

        public int CurrencyId { get; set; }

        public bool IsActive { get; set; }

        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
    }


    public partial class RefundPolicy : Entity<RefundPolicy>
    {
        public RefundPolicy() { }
        public RefundPolicy(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int PolicyId { get; set; }

        public int VehicleId { get; set; }
        public int CustomerId { get; set; }

        public decimal RefundAmount { get; set; }

        public decimal Deduction { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }

    }




    public partial class Customer : Entity<Customer>
    {
        public Customer() { }
        public Customer(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public decimal CustomerId { get; set; }
        public string UserID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string AddressLine1 { get; set; }
        public string AddressLine2 { get; set; }
        public string City { get; set; }
        public string NationalIdentificationNumber { get; set; }
        public string Zipcode { get; set; }
        public string Country { get; set; }
        public DateTime? DateOfBirth { get; set; }
        public string Gender { get; set; }
        public bool? IsWelcomeNoteSent { get; set; }
        public bool? IsPolicyDocSent { get; set; }
        public bool? IsLicenseDiskNeeded { get; set; }
        public bool? IsOTPConfirmed { get; set; }
        public string PhoneNumber { get; set; }

        public bool? IsActive { get; set; }
        public string Countrycode { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

        public bool IsCustomEmail { get; set; }

        // Corporate details
        public string CompanyName { get; set; }
        public string CompanyEmail { get; set; }
        public string CompanyAddress { get; set; }
        public string CompanyPhone { get; set; }
        public string CompanyCity { get; set; }
        public string CompanyBusinessId { get; set; }
        public bool IsCorporate { get; set; }

        public int BranchId { get; set; }

        public string ALMId { get; set; }
        public string AgentWhatsapp { get; set; }

        public string AgentBranch { get; set; }

        public int WorkTypeId { get; set; }

    }

    public partial class LicenseDelivery : Entity<LicenseDelivery>
    {
        public LicenseDelivery() { }
        public LicenseDelivery(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string TicketNo { get; set; }
        public int? CustomerId { get; set; }
        public int? UserId { get; set; }
        public DateTime? DeliveryDate { get; set; }

        public bool? IsAcive { get; set; }
    }

    public partial class LoyaltyDetail : Entity<LoyaltyDetail>
    {
        public LoyaltyDetail() { }
        public LoyaltyDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int? CustomerId { get; set; }
        public int? PolicyId { get; set; }
        public decimal? PointsEarned { get; set; }
        public DateTime? EarnedDate { get; set; }
        public int? PointsRedemed { get; set; }
        public DateTime? RedemedDate { get; set; }

        public bool? IsActive { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
    }

    public partial class PaymentMethod : Entity<PaymentMethod>
    {
        public PaymentMethod() { }
        public PaymentMethod(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Name { get; set; }

        public bool? IsActive { get; set; }

        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
    }
    public partial class ReceiptModuleHistory : Entity<ReceiptModuleHistory>
    {

        public int Id { get; set; }
        public int PolicyId { get; set; }
        public string PolicyNumber { get; set; }
        public string CustomerName { get; set; }
        public string InvoiceNumber { get; set; }
        public int? PaymentMethodId { get; set; }
        public decimal? AmountDue { get; set; }

        public decimal? AmountPaid { get; set; }
        public string Balance { get; set; }
        public DateTime DatePosted { get; set; }

        public string TransactionReference { get; set; }
        public int SummaryDetailId { get; set; }

        public int CreatedBy { get; set; }
        public bool IsMobile { get; set; }

        public DateTime CreatedOn { get; set; }

        public string SignaturePath { get; set; }

        public string RenewPolicyNumber { get; set; }

        public decimal TenderedAmount { get; set; }
    }
    public partial class PaymentTerm : Entity<PaymentTerm>
    {
        public PaymentTerm() { }
        public PaymentTerm(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Name { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
    }

    public partial class PolicyDetail : Entity<PolicyDetail>
    {
        public PolicyDetail() { }
        public PolicyDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int CustomerId { get; set; }
        public string PolicyName { get; set; }
        public string PolicyNumber { get; set; }
        public int? InsurerId { get; set; }
        public int PolicyStatusId { get; set; }
        public int CurrencyId { get; set; }
        public DateTime? StartDate { get; set; }
        public DateTime? EndDate { get; set; }
        public DateTime? RenewalDate { get; set; }
        public DateTime? TransactionDate { get; set; }
        public int BusinessSourceId { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public string Status { get; set; }


    }

    public partial class PolicyStatus : Entity<PolicyStatus>
    {
        public PolicyStatus() { }
        public PolicyStatus(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Status { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
    }

    public partial class SummaryDetail : Entity<SummaryDetail>
    {
        public SummaryDetail() { }
        public SummaryDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }

        public int? VehicleDetailId { get; set; }
        public int? CustomerId { get; set; }
        public int? PaymentTermId { get; set; }
        public int? PaymentMethodId { get; set; }
        public decimal? TotalSumInsured { get; set; }
        public decimal? TotalPremium { get; set; }
        public decimal? TotalStampDuty { get; set; }
        public decimal? TotalZTSCLevies { get; set; }
        public decimal? TotalRadioLicenseCost { get; set; }
        public decimal? AmountPaid { get; set; }
        public string DebitNote { get; set; }
        public string ReceiptNumber { get; set; }
        public bool? SMSConfirmation { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? BalancePaidDate { get; set; }
        public string Notes { get; set; }
        public bool isQuotation { get; set; }
        public int AgentId { get; set; }
        public string ModuleName { get; set; }
        public bool PayLaterStatus { get; set; }
        public bool IsRenewQutation { get; set; }

    }

    public partial class VehicleDetail : Entity<VehicleDetail>
    {
        public VehicleDetail() { }
        public VehicleDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int PolicyId { get; set; }
        public int? NoOfCarsCovered { get; set; }
        public string RegistrationNo { get; set; }
        public int? CustomerId { get; set; }
        public string MakeId { get; set; }
        public string ModelId { get; set; }
        public decimal? CubicCapacity { get; set; }
        public int? VehicleYear { get; set; }
        public string EngineNumber { get; set; }
        public string ChasisNumber { get; set; }
        public string VehicleColor { get; set; }
        public int? VehicleUsage { get; set; }
        public int? CoverTypeId { get; set; }
        public DateTime? CoverStartDate { get; set; }
        public DateTime? CoverEndDate { get; set; }
        public decimal? SumInsured { get; set; }
        public decimal? Premium { get; set; }
        public int? AgentCommissionId { get; set; }
        public decimal? Rate { get; set; }
        public decimal? StampDuty { get; set; }
        public decimal? ZTSCLevy { get; set; }
        public decimal? RadioLicenseCost { get; set; }
        public string OptionalCovers { get; set; }
        public int ExcessType { get; set; }
        public decimal Excess { get; set; }
        public string CoverNoteNo { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
        public Boolean Addthirdparty { get; set; }
        public decimal? AddThirdPartyAmount { get; set; }
        public Boolean PassengerAccidentCover { get; set; }
        public Boolean ExcessBuyBack { get; set; }
        public Boolean RoadsideAssistance { get; set; }
        public Boolean MedicalExpenses { get; set; }
        public int? NumberofPersons { get; set; }
        public bool? IsLicenseDiskNeeded { get; set; }
        public decimal? PassengerAccidentCoverAmount { get; set; }
        public decimal? ExcessBuyBackAmount { get; set; }
        public decimal? RoadsideAssistanceAmount { get; set; }
        public decimal? MedicalExpensesAmount { get; set; }
        public decimal? PassengerAccidentCoverAmountPerPerson { get; set; }
        public decimal? ExcessBuyBackPercentage { get; set; }
        public decimal? RoadsideAssistancePercentage { get; set; }
        public decimal? MedicalExpensesPercentage { get; set; }
        public decimal? ExcessAmount { get; set; }
        public DateTime? RenewalDate { get; set; }
        public DateTime? PolicyExpireDate { get; set; }
        public DateTime? TransactionDate { get; set; }
        public int PaymentTermId { get; set; }
        public int ProductId { get; set; }
        public bool? IncludeRadioLicenseCost { get; set; }
        public string InsuranceId { get; set; }
        public decimal? AnnualRiskPremium { get; set; }
        public decimal? TermlyRiskPremium { get; set; }
        public decimal? QuaterlyRiskPremium { get; set; }
        public decimal? Discount { get; set; }
        public bool isLapsed { get; set; }
        public decimal? BalanceAmount { get; set; }
        public decimal? VehicleLicenceFee { get; set; }
        public decimal? PenaltiesAmt { get; set; }
        public string InsuranceStatus { get; set; }

        //public int BusinessSourceId { get; set; }

        public int BusinessSourceDetailId { get; set; }
        public int CurrencyId { get; set; }

        public string RenewPolicyNumber { get; set; }

        public string LicenseId { get; set; }

        public string CoverNote { get; set; }

        public int TaxClassId { get; set; }
        public string Currency { get; set; }
        public string ManufacturerYear { get; set; }

        public bool? IsRefund { get; set; }
        public int ALMBranchId { get; set; }

        public string IceCashRequest { get; set; }

        public int ZinaraLicensePaymentTermId { get; set; }
        public int RadioLicensePaymentTermId { get; set; }

        public string LicExpiryDate { get; set; }

        public string RadioTVExpiryDate { get; set; }

        public bool IsIndividual { get; set; }
        public string CombinedID { get; set; }
        public string PdfCode { get; set; }

        public string LicenseDeliveryWay { get; set; }

        public decimal LicTransactionAmt { get; set; }

        public decimal ArrearsAmt { get; set; }

        public decimal AdministrationAmt { get; set; }

        public bool IsMobile { get; set; }
    }

    public partial class VehicleMake : Entity<VehicleMake>
    {
        public VehicleMake() { }
        public VehicleMake(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string MakeDescription { get; set; }
        public string MakeCode { get; set; }
        public string ShortDescription { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }

    
    public partial class VehicleModel : Entity<VehicleModel>
    {
        public VehicleModel() { }
        public VehicleModel(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ModelDescription { get; set; }
        public string ModelCode { get; set; }
        public string ShortDescription { get; set; }
        public string MakeCode { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }


    public partial class Branch : Entity<Branch>
    {
        public Branch() { }
        public Branch(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string BranchName { get; set; }

        public string AlmId { get; set; }

    }


    public partial class WorkType : Entity<WorkType>
    {
        public WorkType() { }
        public WorkType(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string Name { get; set; }
    }

    public partial class RiskCoverItem : Entity<RiskCoverItem>
    {
        public RiskCoverItem() { }
        public RiskCoverItem(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int ProductId { get; set; }
        public string RiskCover { get; set; }

    }



    public partial class MachineBranch : Entity<MachineBranch>
    {
        public MachineBranch() { }
        public MachineBranch(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int BranchId { get; set; }
        public string IpAddress { get; set; }
        public DateTime CreatedOn { get; set; }
        public DateTime UpdatedOn { get; set; }

    }



    public partial class VehicleTaxClass : Entity<VehicleTaxClass>
    {
        public VehicleTaxClass() { }
        public VehicleTaxClass(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int TaxClassId { get; set; }
        public string Description { get; set; }
        public int VehicleType { get; set; }

        public int VehicleUsageId { get; set; }
        public string CreatedOn { get; set; }


    }




    public partial class IceCashToken : Entity<IceCashToken>
    {
        public IceCashToken() { }
        public IceCashToken(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ParterToken { get; set; }
        public string ExpiredDate { get; set; }
        public DateTime CreatedOn { get; set; }


    }




    public partial class BasicExcess : Entity<BasicExcess>
    {
        public BasicExcess() { }
        public BasicExcess(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ExcessType { get; set; }
        public decimal? TotalLoss { get; set; }
        public decimal? PartialLoss { get; set; }
        public decimal? OutSideOfZimbabwe { get; set; }
        public string Description { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
    }

    public partial class AgeExcess : Entity<AgeExcess>
    {
        public AgeExcess() { }
        public AgeExcess(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ExcessType { get; set; }
        public int? Age { get; set; }
        public decimal? AgeExcessAmount { get; set; }
        public bool? LicencedLessThan60Months { get; set; }
        public decimal? LicencedLessThan60ExcessAmount { get; set; }
        public string Description { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
    }

    public partial class DomesticPayment : Entity<DomesticPayment>
    {
        public DomesticPayment() { }
        public DomesticPayment(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int SummaryDetailId { get; set; }
        public int VehicleDetailId { get; set; }
        public int PolicyId { get; set; }
        public int CustomerId { get; set; }
        public int CurrencyId { get; set; }
        public string DebitNote { get; set; }
        public int ProductId { get; set; }
        public string PaymentType { get; set; }
        public Guid InvoiceId { get; set; }
        public string InvoiceNumber { get; set; }
  
        public DateTime CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public string TransactionId { get; set; }
    }

    public partial class DomesticSummaryDetail : Entity<DomesticSummaryDetail>
    {
        public DomesticSummaryDetail() { }
        public DomesticSummaryDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int CustomerId { get; set; }
        public int PaymentTermId { get; set; }
        public int PaymentMethodId { get; set; }
        public decimal TotalCoverAmount { get; set; }
        public decimal TotalBasicPremium { get; set; }
        public decimal TotalStampDuty { get; set; }
        public decimal TotalPremium { get; set; }
        public decimal TotalDiscount { get; set; }
        public string DebitNote { get; set; }
        public string ReceiptNumber { get; set; }
        public bool SMSConfirmation { get; set; }
        public decimal AmountPaid { get; set; }
        public decimal MaxAmounttoPaid { get; set; }
        public decimal MinAmounttoPaid { get; set; }
        public DateTime BalancePaidDate { get; set; }
        public string Notes { get; set; }
        public bool isQuotation { get; set; }
        public int CarInsuredCount { get; set; }
        public string InvoiceNumber { get; set; }
        public string Currency { get; set; }

        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
    }


    public partial class DomesticVehicleSummary : Entity<DomesticVehicleSummary>
    {
        public DomesticVehicleSummary() { }
        public DomesticVehicleSummary(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int SummaryDetailId { get; set; }
        public int VehicleDetailsId { get; set; }       
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
    }

    public partial class SpecificExcess : Entity<SpecificExcess>
    {
        public SpecificExcess() { }
        public SpecificExcess(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ExcessType { get; set; }
        public string VehicleParts { get; set; }
        public decimal? ExcessAmount { get; set; }
        public string Description { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
    }
    public partial class ReinsuranceBroker : Entity<ReinsuranceBroker>
    {
        public ReinsuranceBroker() { }
        public ReinsuranceBroker(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ReinsuranceBrokerCode { get; set; }
        public string ReinsuranceBrokerName { get; set; }
        public decimal? Commission { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }
    public partial class ReinsurerDetail : Entity<ReinsurerDetail>
    {
        public ReinsurerDetail() { }
        public ReinsurerDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ReinsurerCode { get; set; }
        public string ReinsurerName { get; set; }
        public Single? ReinsurerCommission { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }
    public partial class Reinsurance : Entity<Reinsurance>
    {
        public Reinsurance() { }
        public Reinsurance(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string TreatyCode { get; set; }
        public string TreatyName { get; set; }
        public decimal? MinTreatyCapacity { get; set; }
        public decimal? MaxTreatyCapacity { get; set; }
        public string Type { get; set; }
        public string ReinsuranceBrokerCode { get; set; }
        public DateTime CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }
    public partial class ReinsuranceTransaction : Entity<ReinsuranceTransaction>
    {
        public ReinsuranceTransaction() { }
        public ReinsuranceTransaction(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string TreatyCode { get; set; }
        public string TreatyName { get; set; }
        public decimal? ReinsuranceAmount { get; set; }
        public decimal? ReinsuranceCommission { get; set; }
        public decimal? ReinsurancePremium { get; set; }
        public decimal? ReinsuranceCommissionPercentage { get; set; }
        public int VehicleId { get; set; }
        public int SummaryDetailId { get; set; }
        public int ReinsuranceBrokerId { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }
    public partial class Product : Entity<Product>
    {
        public Product() { }
        public Product(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ProductName { get; set; }
        public string ProductCode { get; set; }

        public int VehicleTypeId { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }


    }
    public partial class PolicyInsurer : Entity<PolicyInsurer>
    {
        public PolicyInsurer() { }
        public PolicyInsurer(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string InsurerName { get; set; }
        public string InsurerCode { get; set; }
        public string InsurerAddress { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }
    public partial class VehicleCoverType : Entity<VehicleCoverType>
    {
        public VehicleCoverType() { }
        public VehicleCoverType(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string CoverType { get; set; }

    }

    public partial class InflationFactor : Entity<InflationFactor>
    {
        public InflationFactor() { }
        public InflationFactor(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int? InflationFact { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public string CreatedByName { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? ActivatedOn { get; set; }
        public DateTime? DeActivatedOn { get; set; }

    }
    public partial class VehicleUsage : Entity<VehicleUsage>
    {
        public VehicleUsage() { }
        public VehicleUsage(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int ProductId { get; set; }
        public string VehUsage { get; set; }
        public Single? ComprehensiveRate { get; set; }
        public decimal? MinCompAmount { get; set; }
        public Single? ThirdPartyRate { get; set; }
        public decimal? USDBenchmark { get; set; }
        public decimal? MinThirdAmount { get; set; }
        public decimal? FTPAmount { get; set; }
        public decimal? AnnualTPAmount { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public int RiskCoverId { get; set; }

    }
    public partial class PaymentInformation : Entity<PaymentInformation>
    {
        public PaymentInformation() { }
        public PaymentInformation(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int SummaryDetailId { get; set; }
        public int VehicleDetailId { get; set; }
        public int PolicyId { get; set; }
        public int CustomerId { get; set; }
        public int CurrencyId { get; set; }
        public string DebitNote { get; set; }
        public int ProductId { get; set; }
        public bool DeleverLicence { get; set; }
        public string PaymentId { get; set; }
        public string InvoiceId { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

        public string TransactionId { get; set; }
        public string InvoiceNumber { get; set; }

        public string PollURL { get; set; }


    }


    public partial class PartialPayment : Entity<PartialPayment>
    {
        public PartialPayment() { }
        public PartialPayment(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int SummaryDetailId { get; set; }
        public decimal PartialAmount { get; set; }

        public string RegistratonNumber { get; set; }

        public string CustomerEmail { get; set; }
        public DateTime? CreatedOn { get; set; }
    }


    public partial class SmsLog : Entity<SmsLog>
    {
        public SmsLog() { }
        public SmsLog(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string Sendto { get; set; }
        public string Body { get; set; }
        public string Response { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }

    public partial class LogDetailTbl : Entity<LogDetailTbl>
    {
        public LogDetailTbl() { }
        public LogDetailTbl(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string Request { get; set; }
        public string Response { get; set; }  
        public string Method { get; set; }
        public string VRN { get; set; }
        public string BranchId { get; set; }
        public DateTime? CreatedOn { get; set; }
    }

    public partial class Setting : Entity<Setting>
    {
        public Setting() { }
        public Setting(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string keyname { get; set; }
        public string value { get; set; }
        public int? ValueType { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedDate { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedDate { get; set; }

    }
    public partial class UserManagementView : Entity<UserManagementView>
    {
        public UserManagementView() { }
        public UserManagementView(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Role { get; set; }
        public string EmailAddress { get; set; }
        public DateTime? DateOfBirth { get; set; }
        public string Gender { get; set; }
        public string Country { get; set; }
        public string Zipcode { get; set; }
        public string State { get; set; }
        public string AddressLine1 { get; set; }
        public string AddressLine2 { get; set; }
        public string PhoneNumber { get; set; }
        public string City { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }
    public partial class SummaryVehicleDetail : Entity<SummaryVehicleDetail>
    {
        public SummaryVehicleDetail() { }
        public SummaryVehicleDetail(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int SummaryDetailId { get; set; }
        public int VehicleDetailsId { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

    }

    public partial class LicenceTicket : Entity<LicenceTicket>
    {
        public LicenceTicket() { }
        public LicenceTicket(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string TicketNo { get; set; }
        public string PolicyNumber { get; set; }
        public int? VehicleId { get; set; }
        public bool? IsClosed { get; set; }
        public string CloseComments { get; set; }
        public string ReopenComments { get; set; }
        public string DeliveredTo { get; set; }
        public DateTime? CreatedDate { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifyDate { get; set; }
        public int? ModifyBy { get; set; }
    }

    public partial class CustomerWallet : Entity<CustomerWallet>
    {
        public CustomerWallet() { }
        public CustomerWallet(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int? CustId { get; set; }
        public decimal? Points { get; set; }
        public DateTime? CreatedDate { get; set; }
    }
    public partial class PolicyDocument : Entity<PolicyDocument>
    {
        public PolicyDocument() { }
        public PolicyDocument(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int? CustomerId { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public string FilePath { get; set; }
        public string PolicyNumber { get; set; }
        public int? vehicleId { get; set; }
    }

    public partial class PolicyRenewReminderSetting : Entity<PolicyRenewReminderSetting>
    {
        public PolicyRenewReminderSetting() { }
        public PolicyRenewReminderSetting(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int NoOfDays { get; set; }
        public int NotificationType { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime ModifiedOn { get; set; }
        public bool SMS { get; set; }
        public bool Email { get; set; }
    }
    public partial class ReminderFailed : Entity<ReminderFailed>
    {
        public ReminderFailed() { }
        public ReminderFailed(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string EmailBody { get; set; }
        public string SendTo { get; set; }
        public string EmailSubject { get; set; }
        public int NotificationType { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime ModifiedOn { get; set; }

    }

    public partial class AgentLogo : Entity<AgentLogo>
    {
        public AgentLogo() { }
        public AgentLogo(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int CustomerId { get; set; }
        public string LogoPath { get; set; }
        public DateTime CreatedOn { get; set; }
        public int CreatedBy { get; set; }

    }




    public partial class LicenceDiskDeliveryAddress : Entity<LicenceDiskDeliveryAddress>
    {
        public LicenceDiskDeliveryAddress() { }
        public LicenceDiskDeliveryAddress(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string Address1 { get; set; }
        public string Address2 { get; set; }
        public string City { get; set; }
        public int VehicleId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime ModifiedOn { get; set; }

    }


    public partial class UniqueCustomer : Entity<UniqueCustomer>
    {
        public UniqueCustomer() { }
        public UniqueCustomer(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int UniqueCustomerId { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }


    }


    public partial class UniqeTransaction : Entity<UniqeTransaction>
    {
        public UniqeTransaction() { }
        public UniqeTransaction(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int UniqueTransactionId { get; set; }
        public DateTime? CreatedOn { get; set; }

    }


    public partial class City : Entity<City>
    {
        public City() { }
        public City(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string CityName { get; set; }
        public DateTime? CreatedOn { get; set; }

    }



    public partial class BannerImage : Entity<BannerImage>
    {
        public BannerImage() { }
        public BannerImage(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Name { get; set; }
        public string ContentType { get; set; }
        public byte[] Data { get; set; }
        public DateTime? CreatedOn { get; set; }

    }



    //// Second Phase Work


    public partial class ClaimNotification : Entity<ClaimNotification>
    {
        public ClaimNotification() { }
        public ClaimNotification(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string PolicyNumber { get; set; }
        public DateTime DateOfLoss { get; set; }
        public string PlaceOfLoss { get; set; }
        public string DescriptionOfLoss { get; set; }
        public decimal EstimatedValueOfLoss { get; set; }
        public bool? ThirdPartyInvolvement { get; set; }
        public string ClaimantName { get; set; }
        public int CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }
        public bool? IsDeleted { get; set; }
        public bool? IsRegistered { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public int? VehicleId { get; set; }
        public int? PolicyId { get; set; }
        public string ThirdPartyName { get; set; }
        public string ThirdPartyContactDetails { get; set; }
        public string ThirdPartyMakeId { get; set; }
        public string ThirdPartyModelId { get; set; }
        public decimal? ThirdPartyEstimatedValueOfLoss { get; set; }
        public string RegistrationNo { get; set; }
        public DateTime? CoverStartDate { get; set; }
        public DateTime? CoverEndDate { get; set; }
        public string CustomerName { get; set; }
        public decimal? ThirdPartyDamageValue { get; set; }
    }


    public partial class ServiceProvider : Entity<ServiceProvider>
    {
        public ServiceProvider() { }
        public ServiceProvider(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int ServiceProviderType { get; set; }
        public string ServiceProviderName { get; set; }
        public string ServiceProviderContactDetails { get; set; }
        public decimal ServiceProviderFees { get; set; }
        public DateTime CreatedOn { get; set; }
        public bool? IsDeleted { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
    }


    public partial class ServiceProviderType : Entity<ServiceProviderType>
    {
        public ServiceProviderType() { }
        public ServiceProviderType(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ProviderType { get; set; }

    }
    public partial class ClaimRegistration : Entity<ClaimRegistration>
    {
        public ClaimRegistration() { }
        public ClaimRegistration(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string PolicyNumber { get; set; }
        //public string NameOfInsured { get; set; }

        public string PaymentDetails { get; set; }
        //public DateTime? CoverStartDate { get; set; }
        //public DateTime? CoverEndDate { get; set; }
        //public string RiskDetails { get; set; }
        public long ClaimNumber { get; set; }
        public string Checklist { get; set; }
        public DateTime? DateOfLoss { get; set; }
        public DateTime? DateOfNotifications { get; set; }
        public string PlaceOfLoss { get; set; }
        public string DescriptionOfLoss { get; set; }
        public decimal? EstimatedValueOfLoss { get; set; }
        public decimal? ThirdPartyDamageValue { get; set; }
        public bool Claimsatisfaction { get; set; }
        public int ClaimStatus { get; set; }
        public DateTime? CreatedOn { get; set; }

        public string RejectionStatus { get; set; }
        public int VehicleDetailId { get; set; }
        public string RegistrationNo { get; set; }
        public DateTime? ModifyOn { get; set; }
        public string ClaimantName { get; set; }
        public string MakeId { get; set; }
        public string ModelId { get; set; }
        public bool? ThirdPartyInvolvement { get; set; }

        public decimal TotalProviderFees { get; set; }

        public int ClaimNotificationId { get; set; }


        //public DateTime? ModifyOn { get; set; }   
    }


    public partial class ClaimStatus : Entity<ClaimStatus>
    {
        public ClaimStatus() { }
        public ClaimStatus(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Status { get; set; }
    }

    public partial class Checklist : Entity<Checklist>
    {
        public Checklist() { }
        public Checklist(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string ChecklistDetail { get; set; }
    }
    public partial class ClaimDetailsProvider : Entity<ClaimDetailsProvider>
    {
        public ClaimDetailsProvider() { }
        public ClaimDetailsProvider(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int? AssessorsProviderType { get; set; }
        public int? ValuersProviderType { get; set; }
        public string PolicyNumber { get; set; }
        public int? LawyersProviderType { get; set; }
        public int? RepairersProviderType { get; set; }
        public int ClaimNumber { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public decimal? TotalProviderFees { get; set; }
        public int? TownlyProviderType { get; set; }
        public int? MedicalProviderType { get; set; }
        public decimal? AssessorsProviderFees { get; set; }
        public decimal? ValuersProviderFees { get; set; }
        public decimal? LawyersProviderFees { get; set; }
        public decimal? RepairersProviderFees { get; set; }
        public decimal? TownlyProviderFees { get; set; }
        public decimal? MedicalProviderFees { get; set; }



    }
    public partial class ClaimAdjustment : Entity<ClaimAdjustment>
    {
        public ClaimAdjustment() { }
        public ClaimAdjustment(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public decimal AmountToPay { get; set; }
        public decimal? EstimatedLoss { get; set; }
        public decimal ExcessesAmount { get; set; }
        public string PayeeBankDetails { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PayeeName { get; set; }
        public string PolicyholderName { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
        public bool? DriverIsUnder21 { get; set; }
        public bool? Islicensedless60months { get; set; }
        public bool? IsStolen { get; set; }
        public bool? IsLossInZimbabwe { get; set; }
        public bool? IsPartialLoss { get; set; }
        public bool? IsDriverUnder25 { get; set; }
        public bool? SoundSystem { get; set; }
        public string PhoneNumber { get; set; }
        public string PolicyNumber { get; set; }
        public int ClaimNumber { get; set; }
        public bool CommericalCar { get; set; }
        public bool PrivateCar { get; set; }

        public decimal FinalAmountToPaid { get; set; }

        public int ClaimRegisterationId { get; set; }
        public decimal RepairCost { get; set; }
        public decimal ServiceProviderCost { get; set; }

    }
    public partial class ClaimDocument : Entity<ClaimDocument>
    {
        public ClaimDocument() { }
        public ClaimDocument(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public string FilePath { get; set; }
        public string PolicyNumber { get; set; }
        public int ClaimNumber { get; set; }
        public DateTime CreatedOn { get; set; }
        public int CreatedBy { get; set; }
        public int ServiceProvider { get; set; }
        public int ServiceProviderName { get; set; }
        //public DateTime ModifiedOn { get; set; }
        //public int ModifiedBy { get; set; }
        public bool IsActive { get; set; }

    }
    public partial class ClaimSetting : Entity<ClaimSetting>
    {
        public ClaimSetting() { }
        public ClaimSetting(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string KeyName { get; set; }
        public int Value { get; set; }
        public int Valuetype { get; set; }
        public int VehicleType { get; set; }
        public int CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }
        public int ModifiedBy { get; set; }
        public DateTime ModifiedDate { get; set; }
        public bool IsActive { get; set; }


    }

    public partial class EndorsementVehicleDetail : Entity<EndorsementVehicleDetail>
    {
        public EndorsementVehicleDetail() { }
        public EndorsementVehicleDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int? VehicleId { get; set; }
        public int PolicyId { get; set; }
        public int? NoOfCarsCovered { get; set; }
        public string RegistrationNo { get; set; }
        public int? CustomerId { get; set; }
        public string MakeId { get; set; }
        public string ModelId { get; set; }
        public decimal? CubicCapacity { get; set; }
        public int? VehicleYear { get; set; }
        public string EngineNumber { get; set; }
        public string ChasisNumber { get; set; }
        public string VehicleColor { get; set; }
        public int? VehicleUsage { get; set; }
        public int? CoverTypeId { get; set; }
        public DateTime? CoverStartDate { get; set; }
        public DateTime? CoverEndDate { get; set; }
        public decimal? SumInsured { get; set; }
        public decimal? Premium { get; set; }
        public int? AgentCommissionId { get; set; }
        public decimal? Rate { get; set; }
        public decimal? StampDuty { get; set; }
        public decimal? ZTSCLevy { get; set; }
        public decimal? RadioLicenseCost { get; set; }
        public string OptionalCovers { get; set; }
        public int ExcessType { get; set; }
        public decimal Excess { get; set; }
        public string CoverNoteNo { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
        public Boolean Addthirdparty { get; set; }
        public decimal? AddThirdPartyAmount { get; set; }
        public Boolean PassengerAccidentCover { get; set; }
        public Boolean ExcessBuyBack { get; set; }
        public Boolean RoadsideAssistance { get; set; }
        public Boolean MedicalExpenses { get; set; }
        public int? NumberofPersons { get; set; }
        public bool? IsLicenseDiskNeeded { get; set; }
        public decimal? PassengerAccidentCoverAmount { get; set; }
        public decimal? ExcessBuyBackAmount { get; set; }
        public decimal? RoadsideAssistanceAmount { get; set; }
        public decimal? MedicalExpensesAmount { get; set; }
        public decimal? PassengerAccidentCoverAmountPerPerson { get; set; }
        public decimal? ExcessBuyBackPercentage { get; set; }
        public decimal? RoadsideAssistancePercentage { get; set; }
        public decimal? MedicalExpensesPercentage { get; set; }
        public decimal? ExcessAmount { get; set; }
        public DateTime? RenewalDate { get; set; }
        public DateTime? TransactionDate { get; set; }
        public int PaymentTermId { get; set; }
        public int ProductId { get; set; }
        public bool? IncludeRadioLicenseCost { get; set; }
        public string InsuranceId { get; set; }
        public decimal? AnnualRiskPremium { get; set; }
        public decimal? TermlyRiskPremium { get; set; }
        public decimal? QuaterlyRiskPremium { get; set; }
        public decimal? Discount { get; set; }
        public bool isLapsed { get; set; }
        public decimal? BalanceAmount { get; set; }
        public decimal? VehicleLicenceFee { get; set; }

        public int BusinessSourceId { get; set; }

        public int CurrencyId { get; set; }
        public bool? IsCompleted { get; set; }
        public int? PrimaryVehicleId { get; set; }
        public int? EndorsementCustomerId { get; set; }
        public int? EndorsementPolicyId { get; set; }
        public int TaxClassId { get; set; }
        public string CombinedID { get; set; }

        public int ZinaraLicensePaymentTermId { get; set; }

        public int RadioLicensePaymentTermId { get; set; }

    }


    public partial class BirthdayMessage : Entity<BirthdayMessage>
    {
        public BirthdayMessage() { }
        public BirthdayMessage(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public string Message { get; set; }
        public int CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int ModifiedBy { get; set; }

    }


    public partial class EndorsementSummaryDetail : Entity<EndorsementSummaryDetail>
    {
        public EndorsementSummaryDetail() { }
        public EndorsementSummaryDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int SummaryId { get; set; }
        public int? VehicleDetailId { get; set; }
        public int? CustomerId { get; set; }
        public int? PaymentTermId { get; set; }
        public int? PaymentMethodId { get; set; }
        public decimal? TotalSumInsured { get; set; }
        public decimal? TotalPremium { get; set; }
        public decimal? TotalStampDuty { get; set; }
        public decimal? TotalZTSCLevies { get; set; }
        public decimal? TotalRadioLicenseCost { get; set; }
        public decimal? AmountPaid { get; set; }
        public string DebitNote { get; set; }
        public string ReceiptNumber { get; set; }
        public bool? SMSConfirmation { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? BalancePaidDate { get; set; }
        public string Notes { get; set; }
        public bool isQuotation { get; set; }
        public bool? IsCompleted { get; set; }
        public int? PrimarySummaryId { get; set; }
        public int? EndorsementCustomerId { get; set; }
        public int? EndorsementVehicleId { get; set; }
        public int? EndorsementPolicyId { get; set; }

        public decimal PayableAmount { get; set; }

    }

    public partial class EndorsementSummaryVehicleDetail : Entity<EndorsementSummaryVehicleDetail>
    {
        public EndorsementSummaryVehicleDetail() { }
        public EndorsementSummaryVehicleDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int SummaryDetailId { get; set; }
        public int VehicleDetailsId { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool? IsCompleted { get; set; }
        public int? PrimarySummaryVehicleDetail { get; set; }
        public int? EndorsementSummaryId { get; set; }
        public int? EndorsementVehicleId { get; set; }

    }


    public partial class EndorsementCustomer : Entity<EndorsementCustomer>
    {
        public EndorsementCustomer() { }
        public EndorsementCustomer(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public decimal? CustomerId { get; set; }
        public string UserID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string AddressLine1 { get; set; }
        public string AddressLine2 { get; set; }
        public string City { get; set; }
        public string NationalIdentificationNumber { get; set; }
        public string ZipCode { get; set; }
        public string Country { get; set; }
        public DateTime? DateOfBirth { get; set; }
        public string Gender { get; set; }
        public bool? IsWelcomeNoteSent { get; set; }
        public bool? IsPolicyDocSent { get; set; }
        public bool? IsLicenseDiskNeeded { get; set; }
        public bool? IsOTPConfirmed { get; set; }
        public string PhoneNumber { get; set; }

        public bool? IsActive { get; set; }
        public string Countrycode { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

        public bool IsCustomEmail { get; set; }
        public bool? IsCompleted { get; set; }
        public int? PrimeryCustomerId { get; set; }
    }

    public partial class EndorsementPolicyDetail : Entity<EndorsementPolicyDetail>
    {
        public EndorsementPolicyDetail() { }
        public EndorsementPolicyDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int? CustomerId { get; set; }
        public string PolicyName { get; set; }
        public string PolicyNumber { get; set; }
        public int? InsurerId { get; set; }
        public int PolicyStatusId { get; set; }
        public int CurrencyId { get; set; }
        public DateTime? StartDate { get; set; }
        public DateTime? EndDate { get; set; }
        public DateTime? RenewalDate { get; set; }
        public DateTime? TransactionDate { get; set; }
        public int BusinessSourceId { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

        public int? PolicyTerm { get; set; }
        public int? EndorsementCustomerId { get; set; }
        public int? PrimaryPolicyId { get; set; }

    }
    public partial class EndorsementPaymentInformation : Entity<EndorsementPaymentInformation>
    {
        public EndorsementPaymentInformation() { }
        public EndorsementPaymentInformation(bool defaults) : base(defaults) { }
        public int Id { get; set; }
        public int? PrimarySummaryDetailId { get; set; }
        public int? PrimaryVehicleDetailId { get; set; }
        public int? PrimaryPolicyId { get; set; }
        public int? PrimaryCustomerId { get; set; }
        public int? ProductId { get; set; }
        public int? CurrencyId { get; set; }
        public string DebitNote { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public int? EndorsementSummaryId { get; set; }
        public int? EndorsementVehicleId { get; set; }
        public int? EndorsementCustomerId { get; set; }
        public int? EndorsementPolicyId { get; set; }
        public bool? DeleverLicence { get; set; }
        public string PaymentId { get; set; }
        public string InvoiceId { get; set; }
        public string InvoiceNumber { get; set; }
    }


    public partial class SourceDetail : Entity<SourceDetail>
    {
        public SourceDetail() { }
        public SourceDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string PhoneNumber { get; set; }
        public string Address { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int CreatedBy { get; set; }

        public int BusinessId { get; set; }

        //public string BusinessId { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }

        public bool IsDeleted { get; set; }

    }

    public partial class RegistrationDocument : Entity<RegistrationDocument>
    {
        public RegistrationDocument() { }
        public RegistrationDocument(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string Name { get; set; }
        public string FilePath { get; set; }
        public string ClaimRegistrationId { get; set; }
        public DateTime CreatedOn { get; set; }
        public int CreatedBy { get; set; }
    }

    public partial class AspNetUsersUpdate : Entity<AspNetUsersUpdate>
    {
        public AspNetUsersUpdate() { }
        public AspNetUsersUpdate(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string UserId { get; set; }
        public string Email { get; set; }
        public string UpdatedEmail { get; set; }
        public string PhoneNumber { get; set; }
        public string UserName { get; set; }
        public DateTime CreatedOn { get; set; }
        public DateTime? ModifiedOn { get; set; }


    }



    public partial class Domestic_Product : Entity<Domestic_Product>
    {
        public Domestic_Product() { }
        public Domestic_Product(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string ProductName { get; set; }
        public DateTime CreatedOn { get; set; }

    }

    public partial class Domestic_RiskCover : Entity<Domestic_RiskCover>
    {
        public Domestic_RiskCover() { }
        public Domestic_RiskCover(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string CoverName { get; set; }
        public int ProductId { get; set; }
        public DateTime CreatedOn { get; set; }

    }

    public partial class Domestic_RiskItem : Entity<Domestic_RiskItem>
    {
        public Domestic_RiskItem() { }
        public Domestic_RiskItem(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int CoverId { get; set; }
        public string RiskItem { get; set; }
        public decimal Rate { get; set; }
        public DateTime CreatedOn { get; set; }
    }

    //CertSerialNoDetail

    public partial class CertSerialNoDetail : Entity<CertSerialNoDetail>
    {
        public CertSerialNoDetail() { }
        public CertSerialNoDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public int PolicyId { get; set; }
        public string VRN { get; set; }
        public string CertSerialNo { get; set; }
        public string PolicyType { get; set; }
       // public int EndorsmentPolicyId { get; set; }

        public int EndorsmentVehicleId { get; set; }

        public int VehicleId { get; set; }
        public int CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }
    }


    /// <summary>
    /// 17/03/2020
    /// </summary>
    public partial class AspNetUsersDetail : Entity<AspNetUsersDetail>
    {
        public AspNetUsersDetail() { }
        public AspNetUsersDetail(bool defaults) : base(defaults) { }

        public int Id { get; set; }
        public string UserId { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public bool PasswordExpire { get; set; }

    }
    //   Domestic_RiskCover



    //public class VehicleLicense : Entity<VehicleLicense>
    //{
    //    public VehicleLicense() { }
    //    public VehicleLicense(bool defaults) : base(defaults) { }

    //    public int Id { get; set; }
    //    public string VRN { get; set; }
    //    public int VehicelId { get; set; }
    //    public string CombinedID { get; set; }
    //    public string LicenceID { get; set; }
    //    public string InsuranceID  { get; set; }
    //    public int LicFrequency { get; set; }
    //    public int RadioTVUsage { get; set; }
    //    public int RadioTVFrequency { get; set; }
    //    public string NettMass { get; set; }
    //    public DateTime LicExpiryDate { get; set; }
    //    public decimal TransactionAmt { get; set; }
    //    public decimal ArrearsAmt { get; set; }
    //    public decimal PenaltiesAmt { get; set; }
    //    public decimal AdministrationAmt { get; set; }
    //    public decimal TotalLicAmt { get; set; }
    //    public decimal RadioTVAmt { get; set; }
    //    public decimal RadioTVArrearsAmt { get; set; }
    //    public decimal TotalRadioTVAmt { get; set; }
    //    public decimal TotalAmount { get; set; }
    //    public DateTime CreatedOn { get; set; }
    //}



}